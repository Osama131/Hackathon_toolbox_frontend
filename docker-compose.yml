# include:
#   - ./storage/docker-compose.yml
services:
  # db:
  #   image: mongo:7
  #   container_name: hack_db
  #   env_file:
  #     - ./db/.env
  #   volumes:
  #     - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #     - mongovolume:/data/db
  #   ports:
  #     - "27017-27019:27017-27019"
  #   networks:
  #     - hack-network-db
  #
  # api:
  #   image: tiangolo/uvicorn-gunicorn-fastapi:python3.11
  #   container_name: hack_api
  #   command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]  # Specify the command to run your application
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db
  #     - seafile
  #   networks:
  #     - hack-network-db
  #     - hack-network-web

  web:
    build:
      context: ./web
      dockerfile: ./Dockerfile
    container_name: hack_web
    # ports:
    #   - "3000:3000"
      # depends_on:
      # - api
    volumes:
        - type: bind
          source: ./web/logbook
          target: /app/logbook
          #   - /app/node_modules
      #   - /app/.next
    networks:
      - hack-network-web

  nginx:
    image: nginx:1.25
    container_name: hack_nginx
    volumes:
      - type: bind
        source: ./nginx/conf/dev.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true

      - ./nginx/logs:/var/log/nginx/
    ports:
      - "12800:80"
    depends_on:
      # - api
      - web
    networks:
      - hack-network-web

networks:
  # hack-network-db:
  #   driver: bridge
  hack-network-web:
    driver: bridge
    # external: true
    # seafile-net:


# volumes:
  #   mongovolume:


